from kb import *
from aiogram import types
from aiogram import asyncio
from aiogram.types import Message, CallbackQuery, MediaGroup, InputFile, LabeledPrice, PreCheckoutQuery
from aiogram.dispatcher.filters import Command
from aiogram.types.message import ContentType
from kb import *
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from datetime import datetime, timedelta, timezone
import random
import aiogram.utils.markdown as md
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import Message, MediaGroup
from aiogram.types import InputMediaDocument
from config import *
from main import dp,bot
import pandas as pd


import sqlite3



class Form(StatesGroup):
    record  = State()

@dp.message_handler(Command('start'))
async def start(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}üëã\n–Ø - –±–æ—Ç –∫–æ–º–∞–Ω–¥—ã N.ERA - <b>—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤</b> –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –î—É–±–∞–µ.\n–ë–ª–∞–≥–æ–¥–∞—Ä—è –≥–ª—É–±–æ–∫–æ–º—É –∑–Ω–∞–Ω–∏—é <b>–∫–æ–Ω—ä—é–Ω–∫—Ç—É—Ä—ã –∑–∞—Ä—É–±–µ–∂–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞</b> –∏ <b>—Ç—â–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–µ</b> —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –∏ –ø—Ä–∞–≤–æ–≤—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤, –º—ã –ø–æ–º–æ–≥–∞–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å <b>–∫–≤–∞—Ä—Ç–∏—Ä—É</b> –∫–∞–∫ –¥–ª—è <b>–∂–∏–∑–Ω–∏</b>, —Ç–∞–∫ –∏ –¥–ª—è <b>–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π</b>.\n\n–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å:\n\nüå¥–ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥\n\nüå¥–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n\nüå¥–ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Å–µ–±—è –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –î—É–±–∞–µ""", reply_markup=fkb)
    connect = sqlite3.connect('rena.db')
    cursor = connect.cursor()
    if cursor.execute("SELECT * FROM users WHERE user_id = ?", (message.chat.id,)).fetchone() == None:
        cursor.execute("INSERT INTO users (user_id, name, user_name) VALUES (?, ?, ?)", [message.chat.id, message.chat.first_name,message.from_user.username ])
        cursor.close()
        connect.commit()
        connect.close()
    else:
        cursor.close()
        connect.commit()
        connect.close()


@dp.callback_query_handler(text= 'cons')
async def l1(call:types.callback_query):
    await Form.record.set()
    await call.message.edit_text('<b>–ù–∞–ø–∏—à–∏—Ç–µ —É–¥–æ–±–Ω—ã–µ –¥–ª—è –í–∞—Å –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏</b>')
    

@dp.message_handler(state=Form.record)
async def process_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['record'] = message.text
    await bot.forward_message(732659141, message.from_user.id, message.message_id)
    await bot.send_message(732659141,data['record']+'\nusername = @'+str(message.from_user.username))
    await bot.send_message(message.chat.id,'–í–∞—à–∞ –∑–∞–ø–∏—Å—å –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞!\n\n–°–∫–æ—Ä–æ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è!',reply_markup=tkb)
    await state.finish()


@dp.callback_query_handler(text= 'glav')
async def l1(call:types.callback_query):
    await call.message.edit_text(f"–ü—Ä–∏–≤–µ—Ç, {call.message.chat.first_name}üëã\n–Ø - –±–æ—Ç –∫–æ–º–∞–Ω–¥—ã N.ERA - <b>—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤</b> –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –î—É–±–∞–µ.\n–ë–ª–∞–≥–æ–¥–∞—Ä—è –≥–ª—É–±–æ–∫–æ–º—É –∑–Ω–∞–Ω–∏—é <b>–∫–æ–Ω—ä—é–Ω–∫—Ç—É—Ä—ã –∑–∞—Ä—É–±–µ–∂–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞</b> –∏ <b>—Ç—â–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–µ</b> —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –∏ –ø—Ä–∞–≤–æ–≤—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤, –º—ã –ø–æ–º–æ–≥–∞–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å <b>–∫–≤–∞—Ä—Ç–∏—Ä—É</b> –∫–∞–∫ –¥–ª—è <b>–∂–∏–∑–Ω–∏</b>, —Ç–∞–∫ –∏ –¥–ª—è <b>–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π</b>.\n\n–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å:\n\nüå¥–ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥\n\nüå¥–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n\nüå¥–ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Å–µ–±—è –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –î—É–±–∞–µ""", reply_markup=fkb)

@dp.callback_query_handler(text= 'guide')
async def l1(call:types.callback_query):
    await call.message.delete()
    await bot.send_message(call.message.chat.id,'–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –≥–∞–π–¥ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è')
    media = MediaGroup()
    media.attach(InputMediaDocument(open('guide.pdf', 'rb')))
    await bot.send_media_group(call.message.chat.id, media=media)
    await bot.send_message(call.message.chat.id,"–í —ç—Ç–æ–º –≥–∞–π–¥–µ —è –æ–ø–∏—Å–∞–ª–∞ 2 –æ—Å–Ω–æ–≤–Ω—ã–µ <b>—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</b> –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å üè° –ó–∞–±–∏—Ä–∞–π –∫ —Å–µ–±–µ –∏ –ø–æ–ª—å–∑—É–π—Å—è!", reply_markup=forkb)


@dp.callback_query_handler(text= 'podbor')
async def l1(call:types.callback_query):
    await Form.record.set()
    await call.message.edit_text('–ù–∞–ø–∏—à–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–ª—è –í–∞—Å –æ–±—ä–µ–∫—Ç—ã –∏ —Ä–∞–π–æ–Ω—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ —É–¥–æ–±–Ω—ã–µ –¥–ª—è –í–∞—Å <b>–¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏</b>, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏')


@dp.message_handler(Command('client'))
async def start(message: Message):
    connect = sqlite3.connect('rena.db')
    cursor = connect.cursor()
    df = pd.Series(cursor.execute("SELECT COUNT(user_id) FROM users"))
    await bot.send_message(message.chat.id,f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ = {df[0]}")
    cursor.close()
    connect.commit()
    connect.close()
